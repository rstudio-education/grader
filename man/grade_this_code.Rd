% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grade_this_code.R
\name{grade_this_code}
\alias{grade_this_code}
\title{Grade student code against a solution}
\usage{
grade_this_code(
  correct = getOption("gradethis.code.correct", getOption("gradethis.pass",
    "Correct!")),
  incorrect = getOption("gradethis.code.incorrect", getOption("gradethis.fail",
    "Incorrect")),
  ...,
  allow_partial_matching = getOption("gradethis.code.partial_matching", TRUE)
)
}
\arguments{
\item{correct}{A \code{glue}-able character string to display if the student
answer matches a known correct answer.}

\item{incorrect}{A \code{glue}-able character string to display if the student
answer does not match the known correct answer. Use \code{code_feedback()} in
this string to control the placement of the auto-generated feedback message
produced by comparing the student's submission with the solution.}

\item{...}{Ignored}

\item{allow_partial_matching}{A logical if \code{FALSE} don't allow partial matching}
}
\value{
a function whose first parameter should be an environment that contains
all necessary information to compare the code.  The result of the returned function will be a \code{\link[=graded]{graded()}} object.
}
\description{
Checks the code expression or the code result against a solution.
}
\details{
\code{grade_this_code()} compares student code to a solution (i.e. model code) and
describes the first way that the student code differs. If the student code
exactly matches the solution, \code{grade_this_code()} returns a customizable success
message (\code{correct}). If the student code does not match the solution, a
customizable incorrect message (\code{incorrect}) can also be provided.

\code{grade_this_code()} only inspects for code differences between the student's
code and the solution code. The final result of the student code and solution
code is ignored. See \code{\link[=code_feedback]{code_feedback()}} for implementation details on how code
is determined to be different.

You can provide solution code for \code{grade_this_code()} to use in two ways:
\enumerate{
\item Pass code as a character string or a quoted expression to the solution
argument of \code{grade_code()}
\item Make a "-solution" code chunk for the exercise to be checked in a learnr
document. There is no need to supply a solution argument for \code{grade_code()}
if you call it from the "-check" chunk of the same exercise. Likewise, there
is no need to supply a student submitted code argument when you call
\code{grade_code()} from a learnr document (learnr will provide the code that the
student submits when it runs \code{grade_code()}.
}

For best results, name all arguments provided in the solution code.
}
\examples{

# These are manual examples, see grading demo for `learnr` tutorial usage

grade_this_code()(list(
  .user_code = "sqrt(log(2))",
  .solution_code = "sqrt(log(1))"
))

grade_this_code()(list(
  .user_code = rlang::quo(sqrt(log(2))),
  .solution_code = rlang::quo(sqrt(log(1)))
))

# Remember, only `grade_this_code(correct, incorrect)` should be used.
# The followup `list()` and values will be called by `grade_learnr()`.
# To learn more about using `grade_this_code()` with learnr, see:
\dontrun{gradethis_demo()}
}
\seealso{
\code{\link[=code_feedback]{code_feedback()}}, \code{\link[=grade_this]{grade_this()}}
}
