% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grade_learnr.R
\name{grade_learnr}
\alias{grade_learnr}
\title{grade_learnr}
\usage{
grade_learnr(label = NULL, solution_code = NULL, user_code = NULL,
  check_code = NULL, envir_result = NULL, evaluate_result = NULL,
  envir_prep = NULL, ...)
}
\arguments{
\item{label}{Label for exercise chunk}

\item{solution_code}{R code submitted by the user}

\item{user_code}{Code provided within the “-solution” chunk for the exercise.}

\item{check_code}{Code provided within the “-check” chunk for the exercise.}

\item{envir_result}{The R environment after the execution of the chunk.}

\item{evaluate_result}{The return value from the \code{evaluate::evaluate} function.}

\item{envir_prep}{A copy of the R environment before the execution of the chunk.}

\item{...}{Unused (include for compatibility with parameters to be added in the future by learnr)}
}
\value{
An R list which contains several fields indicating the result of the check.
}
\description{
A checker function to use with learnr
}
\details{
For exercise checking, learnr tutorials require a function that learnr can
use in the background to run the code in each "-check" chunk and to format
the results into a format that learnr can display. The function must accept a
specific set of inputs and return a specific type of output (see \code{\link{result}}).
Users are not intended to use the function themselves, but to pass it to the
\code{exercise.checker} knitr chunk option within the setup chunk of the
tutorial.

The grader package provides \code{grade_learnr} for this purpose. To enable
exercise checking in your learnr tutorial, set
\code{tutorial_options(exercise.checker = grade_learnr)} in the setup chunk
of your tutorial.

Run \code{grading_demo()} to see an example learnr document
that uses \code{grade_learnr()}.
}
\examples{
\dontrun{grading_demo()}
}
