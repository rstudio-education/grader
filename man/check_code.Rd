% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check_code.R
\name{check_code}
\alias{check_code}
\title{Check code against a solution}
\usage{
check_code(correct = NULL, incorrect = NULL, grader_args = list(),
  learnr_args = list(),
  glue_correct = getOption("gradethis_glue_correct"),
  glue_incorrect = getOption("gradethis_glue_incorrect"),
  glue_pipe = getOption("gradethis_glue_pipe"))
}
\arguments{
\item{correct}{A character string to display if the student answer matches a
known correct answer.}

\item{incorrect}{A character string to display if the student answer matches
a known incorrect answer.}

\item{grader_args}{A list of parameters passed to \code{grader} functions
(provided by \code{\link[=grade_learnr]{grade_learnr()}}). This contains:
\itemize{
\item \code{user_quo}: Quoted R code submitted by the user. For example
\code{\link[rlang:quo]{rlang::quo(1)}}
\item \code{solution_quo}: (Optional) Quoted solution R code provided by the
\code{*-solution} chunk for an exercise.
}}

\item{learnr_args}{A list of all parameters passed to \code{\link[=grade_learnr]{grade_learnr()}} by
\code{learnr}. See
\url{https://rstudio.github.io/learnr/exercises.html#exercise_checking} for
more details.}

\item{glue_correct}{A glue string that returns the final correct message
displayed. Defaults to \code{getOption("gradethis_glue_correct")}.}

\item{glue_incorrect}{A glue string that returns the final incorrect message
displayed. Defaults to \code{getOption("gradethis_glue_incorrect")}.}

\item{glue_pipe}{A glue string that returns the final message displayed when
the student uses a pipe, \code{$>$}. Defaults to
\code{getOption("gradethis_glue_pipe")}.}
}
\value{
a \code{\link[=graded]{graded()}} object. An incorrect message will describe the first way
that the answer differs, the message will be the content of the \code{glue_pipe}
argument.
}
\description{
Checks the code expression or the code result against a solution.
}
\details{
\code{check_code()} compares student code to a solution (i.e. model code) and
describes the first way that the student code differs. If the student code
exactly matches the solution, \code{check_code()} returns a customizable success
message (\code{correct}). If the student code does not match the solution, a
customizable incorrect message (\code{incorrect}) can also be provided.

\code{check_code()} provides a \emph{strict} check in that the student code must
exactly match the solution. It is not enough for the student code to be
equivalent to the solution code (e.g. to return the same result as the
solution).

You can provide solution code for \code{check_code()} to use in two ways:
\enumerate{
\item Pass code as a character string or a quoted expression to the solution
argument of \code{check_code()}
\item Make a "-solution" code chunk for the exercise to be checked in a learnr
document. There is no need to supply a solution argument for \code{check_code()}
if you call it from the "-check" chunk of the same exercise. Likewise, there
is no need to supply a student submitted code argument when you call
\code{check_code()} from a learnr document (learnr will provide the code that the
student submits when it runs \code{check_code()}.
}

For best results, name all arguments provided in the solution code.
}
\examples{
\dontrun{grading_demo()}

# This is a manual example, see grading demo for `learnr` tutorial usage
y <- quote(sqrt(log(2)))
z <- quote(sqrt(log(1)))
check_code(grader_args = list(user_quo = y, solution_quo = z))
}
\seealso{
\code{\link[=check_code]{check_code()}}, \code{\link[=check_result]{check_result()}}, and \code{\link[=test_result]{test_result()}}
}
